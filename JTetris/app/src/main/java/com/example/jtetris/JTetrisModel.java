package com.example.jtetris;

import java.io.Serializable;


public class JTetrisModel implements Serializable { // derived from TestMain.java in Lecture 4
    private JTetris board;
    public boolean isBlockIndex(char key) {
        int nBlks = setOfBlockArrays.length;
        int idx = key - '0';
        if (idx >= 0 && idx < nBlks)
            return true;
        else
            return false;
    }
    public Matrix getBlock(char type) { return board.setOfBlockObjects[type - '0'][0]; }
    public Matrix getScreen() { return board.get_oScreen(); }
    public JTetrisModel(int dy, int dx) throws Exception {
        JTetris.init(setOfBlockArrays);
        board = new JTetris(dy, dx);
    }
    public JTetris.TetrisState accept(char ch) throws Exception { return board.accept(ch); }

    private int[][][][] setOfBlockArrays = { // [8][3][3][3] 10: A, 20: B, 30: C
            // A와 B만 나오는 경우 1 (A 1개, B 2개)
            {
                    {
                            { 0, 10, 0 },
                            { 0, 20, 0 },
                            { 0, 20, 0 },
                    },
                    {
                            { 0, 20, 0 },
                            { 0, 10, 0 },
                            { 0, 20, 0 },
                    },
                    {
                            { 0, 20, 0 },
                            { 0, 20, 0 },
                            { 0, 10, 0 },
                    }
            },
            // A와 B만 나오는 경우 2 (A 2개, B 1개)
            {
                    {
                            { 0, 20, 0 },
                            { 0, 10, 0 },
                            { 0, 10, 0 },
                    },
                    {
                            { 0, 10, 0 },
                            { 0, 20, 0 },
                            { 0, 10, 0 },
                    },
                    {
                            { 0, 10, 0 },
                            { 0, 10, 0 },
                            { 0, 20, 0 },
                    }
            },
            // B와 C만 나오는 경우 1 (B 1개, C 2개)
            {
                    {
                            { 0, 20, 0 },
                            { 0, 30, 0 },
                            { 0, 30, 0 },
                    },
                    {
                            { 0, 30, 0 },
                            { 0, 20, 0 },
                            { 0, 30, 0 },
                    },
                    {
                            { 0, 30, 0 },
                            { 0, 30, 0 },
                            { 0, 20, 0 },
                    }
            },
            // B와 C만 나오는 경우 2 (B 2개, C 1개)
            {
                    {
                            { 0, 30, 0 },
                            { 0, 20, 0 },
                            { 0, 20, 0 },
                    },
                    {
                            { 0, 20, 0 },
                            { 0, 30, 0 },
                            { 0, 20, 0 },
                    },
                    {
                            { 0, 20, 0 },
                            { 0, 20, 0 },
                            { 0, 30, 0 },
                    }
            },
            // C와 A만 나오는 경우 (C 1개, A 2개)
            {
                    {
                            { 0, 30, 0 },
                            { 0, 10, 0 },
                            { 0, 10, 0 },
                    },
                    {
                            { 0, 10, 0 },
                            { 0, 30, 0 },
                            { 0, 10, 0 },
                    },
                    {
                            { 0, 10, 0 },
                            { 0, 10, 0 },
                            { 0, 30, 0 },
                    }
            },
            // C와 A만 나오는 경우 (C 2개, A 1개)
            {
                    {
                            { 0, 10, 0 },
                            { 0, 30, 0 },
                            { 0, 30, 0 },
                    },
                    {
                            { 0, 30, 0 },
                            { 0, 10, 0 },
                            { 0, 30, 0 },
                    },
                    {
                            { 0, 30, 0 },
                            { 0, 30, 0 },
                            { 0, 10, 0 },
                    }
            },
            // A, B, C 모두 나오는 경우 1
            {
                    {
                            { 0, 10, 0 },
                            { 0, 20, 0 },
                            { 0, 30, 0 },
                    },
                    {
                            { 0, 20, 0 },
                            { 0, 30, 0 },
                            { 0, 10, 0 },
                    },
                    {
                            { 0, 30, 0 },
                            { 0, 10, 0 },
                            { 0, 20, 0 },
                    },
            },
            // A, B, C 모두 나오는 경우 2
            {

                    {
                            { 0, 10, 0 },
                            { 0, 30, 0 },
                            { 0, 20, 0 },
                    },
                    {
                            { 0, 20, 0 },
                            { 0, 10, 0 },
                            { 0, 30, 0 },
                    },
                    {
                            { 0, 30, 0 },
                            { 0, 20, 0 },
                            { 0, 10, 0 },
                    }
            },
    }; // end of arrayBlock
    private int[][][][] setOfJBlockArrays = { // [7][4][?][?]
            {
                    {
                            { 0, 0, 10, 0 },
                            { 0, 0, 10, 0 },
                            { 0, 0, 10, 0 },
                            { 0, 0, 10, 0 },
                    },
                    {
                            { 0, 0, 0, 0 },
                            { 10, 10, 10, 10 },
                            { 0, 0, 0, 0 },
                            { 0, 0, 0, 0 }
                    },
                    {
                            { 0, 0, 10, 0 },
                            { 0, 0, 10, 0 },
                            { 0, 0, 10, 0 },
                            { 0, 0, 10, 0 },
                    },
                    {
                            { 0, 0, 0, 0 },
                            { 10, 10, 10, 10 },
                            { 0, 0, 0, 0 },
                            { 0, 0, 0, 0 }
                    }
            },
            {
                    {
                            { 20, 0, 0 },
                            { 20, 20, 20 },
                            { 0, 0, 0 }
                    },
                    {
                            { 0, 20, 20 },
                            { 0, 20, 0 },
                            { 0, 20, 0 }
                    },
                    {
                            { 0, 0, 0 },
                            { 20, 20, 20 },
                            { 0, 0, 20 }
                    },
                    {
                            { 0, 20, 0 },
                            { 0, 20, 0 },
                            { 20, 20, 0 }
                    }
            },
            {
                    {
                            { 0, 0, 30 },
                            { 30, 30, 30 },
                            { 0, 0, 0 }
                    },
                    {
                            { 0, 30, 0 },
                            { 0, 30, 0 },
                            { 0, 30, 30 }
                    },
                    {
                            { 0, 0, 0 },
                            { 30, 30, 30 },
                            { 30, 0, 0 }
                    },
                    {
                            { 30, 30, 0 },
                            { 0, 30, 0 },
                            { 0, 30, 0 }
                    }
            },
            {
                    {
                            { 0, 40, 0 },
                            { 40, 40, 40 },
                            { 0, 0, 0 }
                    },
                    {
                            { 0, 40, 0 },
                            { 0, 40, 40 },
                            { 0, 40, 0 }
                    },
                    {
                            { 0, 0, 0 },
                            { 40, 40, 40 },
                            { 0, 40, 0 }
                    },
                    {
                            { 0, 40, 0 },
                            { 40, 40, 0 },
                            { 0, 40, 0 }
                    }
            },
            {
                    {
                            { 0, 50, 0 },
                            { 50, 50, 0 },
                            { 50, 0, 0 }
                    },
                    {
                            { 50, 50, 0 },
                            { 0, 50, 50 },
                            { 0, 0, 0 }
                    },
                    {
                            { 0, 50, 0 },
                            { 50, 50, 0 },
                            { 50, 0, 0 }
                    },
                    {
                            { 50, 50, 0 },
                            { 0, 50, 50 },
                            { 0, 0, 0 }
                    }
            },
            {
                    {
                            { 0, 60, 0 },
                            { 0, 60, 60 },
                            { 0, 0, 60 }
                    },
                    {
                            { 0, 60, 60 },
                            { 60, 60, 0 },
                            { 0, 0, 0 }
                    },
                    {
                            { 0, 60, 0 },
                            { 0, 60, 60 },
                            { 0, 0, 60 }
                    },
                    {
                            { 0, 60, 60 },
                            { 60, 60, 0 },
                            { 0, 0, 0 }
                    }
            },
            {
                    {
                            { 70, 70 },
                            { 70, 70 }
                    },
                    {
                            { 70, 70 },
                            { 70, 70 }
                    },
                    {
                            { 70, 70 },
                            { 70, 70 }
                    },
                    {
                            { 70, 70 },
                            { 70, 70 }
                    }
            }
    }; // end of arrayBlock
}

